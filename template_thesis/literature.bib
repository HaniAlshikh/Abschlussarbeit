% Encoding: UTF-8

@incollection{GANTZ20141,
  title = {Chapter 1 - IT Audit Fundamentals},
  editor = {Stephen D. Gantz},
  booktitle = {The Basics of IT Audit},
  publisher = {Syngress},
  address = {Boston},
  pages = {1-19},
  year = {2014},
  isbn = {978-0-12-417159-6},
  doi = {https://doi.org/10.1016/B978-0-12-417159-6.00001-8},
  url = {https://www.sciencedirect.com/science/article/pii/B9780124171596000018},
  author = {Stephen D. Gantz},
  keywords = {IT audit, auditors, information assurance, governance},
  abstract = {This chapter gives a broad overview of IT auditing, explaining what auditing is, why auditing is performed, the subjects of audits, and who conducts audits, and defining key terms and concepts referenced throughout the book. It seeks to answer the basic questions someone new to IT auditing would ask—the who, what, when, where, and why—and subsequently sets up more detailed chapters that go into more depth as to how auditing is done. This chapter distinguishes between internal and external auditing in terms of the purposes, rationale, and requirements for each and carries this distinction through to the types of organizations and auditors involved. It also describes the various career paths and professional development activities associated with developing IT auditors.}
}

@misc{ISOISO1953,
  author = {ISO{~}19011},
  publisher = {ISO, Geneva, Switzerland},
  title = {ISO - ISO 19011:2018 - Guidelines for auditing management systems},
  url={https://www.iso.org/obp/ui/#iso:std:iso:19011:ed-3:v1:en:term:3.1},
  month = {07},
  year = {2018},
  note = {(Accessed on 12/13/2022)}
}

@misc{Microsof3:online,
author = {},
title = {Microsoft Word - ITIL 2011 English Glossary\_v1.0\_word},
howpublished = {\url{https://www.alaska.edu/files/oit/ITIL_2011_English_glossary_v1.0.pdf}},
month = {},
year = {},
note = {(Accessed on 12/13/2022)}
}

@article{hanna2011itil,
  title={ITIL{\textregistered} glossary and abbreviations English},
  author={Hanna, Ashley and Rance, Stuart},
  url={https://www.alaska.edu/files/oit/ITIL_2011_English_glossary_v1.0.pdf},
  journal={Haettu},
  volume={14},
  pages={2021},
  year={2011}
}

@misc{BaFinZAIT,
author = {BaFin, Bundesanstalt für Finanzdienstleistungsaufsicht},
title = {Rundschreiben 11/2021 (BA) - Zahlungsdiensteaufsichtliche Anforderungen an die IT (ZAIT)},
url={https://www.bafin.de/dok/16514544},
month = {11},
year = {2021},
note = {(Accessed on 12/15/2022)}
}

@book{SAIP,
author = {Bass, Len and Clements, Paul and Kazman, Rick},
year = {2003},
month = {01},
pages = {},
title = {Software Architecture In Practice},
isbn = {978-0321154958}
}

@ARTICLE{5427384,  
author={van der Aalst, Wil M.P. and van Hee, Kees M. and van der Werf, Jan Martijn and Verdonk, Marc},
journal={Computer},
title={Auditing 2.0: Using Process Mining to Support Tomorrow's Auditor},
year={2010},
volume={43},
number={3},
pages={90-93},
doi={10.1109/MC.2010.61}
}

@article{OVEREEM2021110970,
title = {An empirical characterization of event sourced systems and their schema evolution — Lessons from industry},
journal = {Journal of Systems and Software},
volume = {178},
pages = {110970},
year = {2021},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2021.110970},
url = {https://www.sciencedirect.com/science/article/pii/S0164121221000674},
author = {Michiel Overeem and Marten Spoor and Slinger Jansen and Sjaak Brinkkemper},
keywords = {Event sourcing, CQRS, Event-driven architecture, Schema evolution, Software architecture patterns, Grounded theory},
abstract = {Event sourced systems are increasing in popularity because they are reliable, flexible, and scalable. In this article, we point a microscope at a software architecture pattern that is rapidly gaining popularity in industry, but has not received as much attention from the scientific community. We do so through constructivist grounded theory, which proves a suitable qualitative method for extracting architectural knowledge from practitioners. Based on the discussion of 19 event sourced systems we explore the rationale for and the context of the event sourcing pattern. A description of the pattern itself and its relation to other patterns as discussed with practitioners is given. The description itself is grounded in the experience of 25 engineers, making it a reliable source for both new practitioners and scientists. We identify five challenges that practitioners experience: event system evolution, the steep learning curve, lack of available technology, rebuilding projections, and data privacy. For the first challenge of event system evolution, we uncover five tactics and solutions that support practitioners in their design choices when developing evolving event sourced systems: versioned events, weak schema, upcasting, in-place transformation, and copy-and-transform.}
}

@book{richards2015software,
  title={Software architecture patterns},
  author={Richards, Mark},
  volume={4},
  year={2015},
  publisher={O'Reilly Media, Incorporated 1005 Gravenstein Highway North, Sebastopol, CA~…}
}

@book{richardson2018microservices,
  title={Microservices patterns: with examples in Java},
  author={Richardson, Chris},
  year={2018},
  publisher={Simon and Schuster}
}